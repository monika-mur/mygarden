// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyGarden.Infrastructure;

namespace MyGarden.Web.Migrations
{
    [DbContext(typeof(GardenDbContext))]
    partial class GardenDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyGarden.Domain.Garden.Garden", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Garden");
                });

            modelBuilder.Entity("MyGarden.Domain.PlantCharacteristics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LatinName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlantCharacteristics");
                });

            modelBuilder.Entity("MyGarden.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyGarden.Domain.Garden.Garden", b =>
                {
                    b.OwnsMany("MyGarden.Domain.Garden.Plant", "Plants", b1 =>
                        {
                            b1.Property<Guid>("GardenId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<Guid?>("PlantCharacteristicsId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("PlantingDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("GardenId", "Id");

                            b1.HasIndex("PlantCharacteristicsId");

                            b1.ToTable("Plant");

                            b1.WithOwner()
                                .HasForeignKey("GardenId");

                            b1.HasOne("MyGarden.Domain.PlantCharacteristics", "PlantCharacteristics")
                                .WithMany()
                                .HasForeignKey("PlantCharacteristicsId");

                            b1.OwnsMany("MyGarden.Domain.Garden.CompletedAction", "CompletedActions", b2 =>
                                {
                                    b2.Property<Guid>("PlantGardenId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("PlantId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<DateTime>("ActionDate")
                                        .HasColumnType("datetime2");

                                    b2.HasKey("PlantGardenId", "PlantId", "Id");

                                    b2.ToTable("CompletedAction");

                                    b2.WithOwner()
                                        .HasForeignKey("PlantGardenId", "PlantId");

                                    b2.OwnsOne("MyGarden.GardenKnowledge.Domain.GardenAction", "Action", b3 =>
                                        {
                                            b3.Property<Guid>("CompletedActionPlantGardenId")
                                                .HasColumnType("uniqueidentifier");

                                            b3.Property<int>("CompletedActionPlantId")
                                                .HasColumnType("int");

                                            b3.Property<int>("CompletedActionId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.Property<int>("ActionType")
                                                .HasColumnType("int");

                                            b3.Property<string>("Description")
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("CompletedActionPlantGardenId", "CompletedActionPlantId", "CompletedActionId");

                                            b3.ToTable("CompletedAction");

                                            b3.WithOwner()
                                                .HasForeignKey("CompletedActionPlantGardenId", "CompletedActionPlantId", "CompletedActionId");

                                            b3.OwnsOne("MyGarden.GardenKnowledge.Domain.GardeningDate", "Time", b4 =>
                                                {
                                                    b4.Property<Guid>("GardenActionCompletedActionPlantGardenId")
                                                        .HasColumnType("uniqueidentifier");

                                                    b4.Property<int>("GardenActionCompletedActionPlantId")
                                                        .HasColumnType("int");

                                                    b4.Property<int>("GardenActionCompletedActionId")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("int")
                                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                    b4.HasKey("GardenActionCompletedActionPlantGardenId", "GardenActionCompletedActionPlantId", "GardenActionCompletedActionId");

                                                    b4.ToTable("CompletedAction");

                                                    b4.WithOwner()
                                                        .HasForeignKey("GardenActionCompletedActionPlantGardenId", "GardenActionCompletedActionPlantId", "GardenActionCompletedActionId");
                                                });
                                        });
                                });
                        });
                });

            modelBuilder.Entity("MyGarden.Domain.PlantCharacteristics", b =>
                {
                    b.OwnsOne("MyGarden.Domain.PlantSpacing", "Spacing", b1 =>
                        {
                            b1.Property<Guid>("PlantCharacteristicsId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Maximal")
                                .HasColumnType("int");

                            b1.Property<int>("Measure")
                                .HasColumnType("int");

                            b1.Property<int>("Minimal")
                                .HasColumnType("int");

                            b1.HasKey("PlantCharacteristicsId");

                            b1.ToTable("PlantCharacteristics");

                            b1.WithOwner()
                                .HasForeignKey("PlantCharacteristicsId");
                        });

                    b.OwnsOne("MyGarden.GardenKnowledge.Domain.GardeningDate", "FloweringTime", b1 =>
                        {
                            b1.Property<Guid>("PlantCharacteristicsId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("PlantCharacteristicsId");

                            b1.ToTable("PlantCharacteristics");

                            b1.WithOwner()
                                .HasForeignKey("PlantCharacteristicsId");
                        });

                    b.OwnsOne("MyGarden.GardenKnowledge.Domain.GardeningDate", "SowingDate", b1 =>
                        {
                            b1.Property<Guid>("PlantCharacteristicsId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("PlantCharacteristicsId");

                            b1.ToTable("PlantCharacteristics");

                            b1.WithOwner()
                                .HasForeignKey("PlantCharacteristicsId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
